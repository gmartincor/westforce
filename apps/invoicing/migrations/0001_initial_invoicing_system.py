# Generated by Django 4.2.16 on 2025-10-26 05:23

import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified date')),
                ('legal_form', models.CharField(choices=[('SOLE_TRADER', 'Sole Trader'), ('PTY_LTD', 'Proprietary Limited Company (Pty Ltd)'), ('PUBLIC_COMPANY', 'Public Company Limited'), ('PARTNERSHIP', 'Partnership'), ('TRUST', 'Trust'), ('COOPERATIVE', 'Cooperative')], max_length=20, verbose_name='Legal structure')),
                ('business_name', models.CharField(max_length=200, verbose_name='Business name')),
                ('legal_name', models.CharField(blank=True, max_length=200, verbose_name='Legal name')),
                ('tax_id', models.CharField(max_length=15, verbose_name='ABN/ACN')),
                ('address', models.TextField(verbose_name='Address')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Postcode')),
                ('city', models.CharField(max_length=100, verbose_name='City/Suburb')),
                ('province', models.CharField(blank=True, max_length=100, verbose_name='State')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('bank_name', models.CharField(max_length=100, verbose_name='Bank')),
                ('iban', models.CharField(max_length=34, verbose_name='BSB/Account')),
                ('mercantile_registry', models.CharField(blank=True, max_length=200, verbose_name='ASIC registration')),
                ('share_capital', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Share capital AUD')),
                ('invoice_prefix', models.CharField(default='INV', max_length=10, verbose_name='Invoice prefix')),
                ('current_number', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company/logos/')),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified date')),
                ('reference', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('issue_date', models.DateField(default=datetime.date.today, verbose_name='Issue date')),
                ('client_type', models.CharField(choices=[('COMPANY', 'Company'), ('SOLE_TRADER', 'Sole Trader'), ('INDIVIDUAL', 'Individual')], max_length=20, verbose_name='Client type')),
                ('client_name', models.CharField(max_length=200, verbose_name='Client name')),
                ('client_tax_id', models.CharField(blank=True, max_length=15, verbose_name='Client ABN/ACN')),
                ('client_address', models.TextField(verbose_name='Client address')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid')], default='DRAFT', max_length=20, verbose_name='Status')),
                ('payment_terms', models.TextField(default='Bank transfer', verbose_name='Payment terms')),
                ('pdf_file', models.FileField(blank=True, upload_to='invoices/pdfs/')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoicing.company')),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Unit price AUD')),
                ('gst_rate', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='GST (%)')),
                ('withholding_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Withholding tax (%)')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='invoicing.invoice')),
            ],
        ),
    ]
